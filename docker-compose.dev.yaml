version: "3.7"

networks:
    open-social:
        driver: bridge

# volumes:
#     zookeeper_data:
#         driver: local
#     kafka_data:
#         driver: local

services:
    ingress:
        image: nginx
        volumes:
            - ./nginx.dev.conf:/etc/nginx/nginx.conf:ro
        ports:
            - 80:80
        networks:
            - open-social
        depends_on:
            - backend
            - media-download

    backend:
        image: reecerussell/open-social-backend
        build:
            context: .
            dockerfile: ./cmd/backend/Dockerfile
        environment:
            USERS_API_URL: http://users:9292
            AUTH_API_URL: http://auth:9292
            POSTS_API_URL: http://posts:9292
            MEDIA_API_URL: http://media:9292
            TOKEN_PUBLIC_KEY: /app/token-rsa.dev.pub
        volumes:
            - ./token-rsa.dev.pub:/app/token-rsa.dev.pub
        networks:
            - open-social
        depends_on:
            - users
            - auth
            - posts
            - media

    users:
        image: reecerussell/open-social-users
        build:
            context: .
            dockerfile: ./cmd/users/Dockerfile
        environment:
            CONNECTION_STRING: ${CONNECTION_STRING}
        networks:
            - open-social

    auth:
        image: reecerussell/open-social-auth
        build:
            context: .
            dockerfile: ./cmd/auth/Dockerfile
        environment:
            USERS_API_URL: http://users:9292
            TOKEN_PRIVATE_KEY: /app/token-rsa.dev.pem
        volumes:
            - ./token-rsa.dev.pem:/app/token-rsa.dev.pem
        networks:
            - open-social
        depends_on:
            - users

    posts:
        image: reecerussell/open-social-posts
        build:
            context: .
            dockerfile: ./cmd/posts/Dockerfile
        environment:
            CONNECTION_STRING: ${CONNECTION_STRING}
            USERS_API_URL: http://users:9292
            KAFKA_HOSY: kafka:9093
        networks:
            - open-social
        depends_on:
            - users
            #- kafka

    media:
        image: reecerussell/open-social-media
        build:
            context: .
            dockerfile: ./cmd/media/Dockerfile
        environment:
            CONNECTION_STRING: ${CONNECTION_STRING}
            MEDIA_BUCKET: open-social-media
            GOOGLE_APPLICATION_CREDENTIALS: /cred/media-account.json
        volumes:
            - ~/.gcp/media-account.json:/cred/media-account.json
        networks:
            - open-social

    media-download:
        image: reecerussell/open-social-media-download
        build:
            context: .
            dockerfile: ./cmd/media-download/Dockerfile
        environment:
            MEDIA_API_URL: http://media:9292
        networks:
            - open-social
        depends_on:
            - media

    ## KAFKA

    # zookeeper:
    #     image: bitnami/zookeeper
    #     environment:
    #         ALLOW_ANONYMOUS_LOGIN: "yes"
    #     volumes:
    #         - "zookeeper_data:/bitnami"
    #     networks:
    #         - open-social

    # kafka:
    #     image: bitnami/kafka
    #     environment:
    #         KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
    #         ALLOW_PLAINTEXT_LISTENER: "yes"
    #         KAFKA_CFG_INTER_BROKER_LISTENER_NAME: "INTERNAL"
    #         KAFKA_CFG_INTER_SECURITY_PROTOCOL_MAP: "INTERNAL://kafka:9094"
    #         KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: "CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT,INTERNAL:PLAINTEXT"
    #         KAFKA_CFG_LISTENERS: "CLIENT://:9092,EXTERNAL://:9093,INTERNAL://:9094"
    #         KAFKA_CFG_ADVERTISED_LISTENERS: "CLIENT://kafka:9092,EXTERNAL://localhost:9093,INTERNAL://kafka:9094"
    #         KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: "true"
    #     volumes:
    #         - "kafka_data:/bitnami"
    #     networks:
    #         - open-social
    #     depends_on:
    #         - zookeeper
